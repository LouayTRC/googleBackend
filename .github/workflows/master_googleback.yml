name: Build and Deploy JAR to Azure Web App via FTPS - googleBack

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    environment: googleClub

    env:
      SPRING_PROFILES_ACTIVE: ${{ secrets.SPRING_PROFILES_ACTIVE }}
      DB_SERVER_NAME: ${{ secrets.DB_SERVER_NAME }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      OWNER_USERNAME: ${{ secrets.OWNER_USERNAME }}
      OWNER_PASSWORD: ${{ secrets.OWNER_PASSWORD }}
      CLUB_MAIL: ${{ secrets.CLUB_MAIL }}
      CLUB_PASSWORD: ${{ secrets.CLUB_PASSWORD }}
      HASH_KEY: ${{ secrets.HASH_KEY }}
      AZURE_APP_NAME: googleBack

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'microsoft'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Verify JAR file
        run: |
          # Check if the JAR file was built correctly in the target directory
          ls -l target/
          
          # You should see the JAR file, for example: auth-0.0.1-SNAPSHOT.jar
          if [ ! -f "target/auth-0.0.1-SNAPSHOT.jar" ]; then
            echo "JAR file not found!"
            exit 1
          fi

      - name: Upload JAR File
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: target/auth-0.0.1-SNAPSHOT.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download JAR File
        uses: actions/download-artifact@v4
        with:
          name: java-app

      - name: Install FTP Client
        run: sudo apt-get install -y lftp

      - name: Deploy to Azure Web App via FTPS
        env:
          FTPS_SERVER: ${{ secrets.FTPS_SERVER }}
          FTPS_USERNAME: ${{ secrets.FTPS_USERNAME }}
          FTPS_PASSWORD: ${{ secrets.FTPS_PASSWORD }}
        run: |
          # Check if the downloaded artifact exists
          ls -l java-app/

          # Deploy the JAR file to Azure Web App via FTPS
          lftp -f "
          open ftps://$FTPS_SERVER
          user $FTPS_USERNAME $FTPS_PASSWORD
          # Ensure the wwwroot directory exists
          mkdir -p /site/wwwroot
          # Mirror the contents of the JAR file to the remote server
          mirror -R ./java-app /site/wwwroot
          bye
          "
