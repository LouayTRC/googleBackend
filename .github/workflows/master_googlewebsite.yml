# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy JAR app to Azure Web App - googleWebsite

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    environment: googleClub

    env:
      SPRING_PROFILES_ACTIVE: ${{ secrets.SPRING_PROFILES_ACTIVE }}
      DB_SERVER_NAME: ${{ secrets.DB_SERVER_NAME }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      OWNER_USERNAME: ${{ secrets.OWNER_USERNAME }}
      OWNER_PASSWORD: ${{ secrets.OWNER_PASSWORD }}
      CLUB_MAIL: ${{ secrets.CLUB_MAIL }}
      CLUB_PASSWORD: ${{ secrets.CLUB_PASSWORD }}
      HASH_KEY: ${{ secrets.HASH_KEY }}
      AZURE_APP_NAME: googleWebsite
      


    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up the Java version
      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'microsoft'

      # Build the project with Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Verify the JAR file exists in the target directory
      - name: Verify JAR file in the target directory
        run: |
          echo "Listing target directory to verify the JAR file:"
          ls -l target/
          
          # Fail the job if the JAR file is not present
          if [ ! -f "target/auth-0.0.1-SNAPSHOT.jar" ]; then
            echo "JAR file not found in target/ directory!"
            exit 1
          fi

      # Upload the built JAR as an artifact for deployment
      - name: Upload JAR file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: target/auth-0.0.1-SNAPSHOT.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    environment: googleClub
    env:
      SPRING_PROFILES_ACTIVE: ${{ secrets.SPRING_PROFILES_ACTIVE }}
      DB_SERVER_NAME: ${{ secrets.DB_SERVER_NAME }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      OWNER_USERNAME: ${{ secrets.OWNER_USERNAME }}
      OWNER_PASSWORD: ${{ secrets.OWNER_PASSWORD }}
      CLUB_MAIL: ${{ secrets.CLUB_MAIL }}
      CLUB_PASSWORD: ${{ secrets.CLUB_PASSWORD }}
      HASH_KEY: ${{ secrets.HASH_KEY }}
      AZURE_APP_NAME: googleWebsite
      FTPS_SERVER: ${{ secrets.FTPS_SERVER }}
      FTPS_USERNAME: ${{ secrets.FTPS_USERNAME }}
      FTPS_PASSWORD: ${{ secrets.FTPS_PASSWORD }}

    steps:
      
      - name: Download JAR File
        uses: actions/download-artifact@v4
        with:
          name: java-app
          path: ./ 


      - name: Debug FTPS Environment Variables
        run: |
          echo "FTPS_SERVER: $FTPS_SERVER"
          echo "FTPS_USERNAME: $FTPS_USERNAME"
          # Avoid printing sensitive data like passwords



      - name: Install lftp
        run: sudo apt-get install -y lftp


      - name: Deploy to Azure Web App via FTPS
        run: |
          # Ensure the JAR file exists locally
          if [ ! -f "./auth-0.0.1-SNAPSHOT.jar" ]; then
            echo "JAR file not found after download!"
            exit 1
          fi
          
          # Connect to FTPS and upload the JAR file
          
          lftp -f "
          set ftp:ssl-allow yes;
          open ftps://$FTPS_SERVER
          user $FTPS_USERNAME $FTPS_PASSWORD
          
          rm -f site/wwwroot/app.jar;
          rm -f site/wwwroot/auth-0.0.1-SNAPSHOT;
          cd site/wwwroot;
          echo 'Uploading auth-0.0.1-SNAPSHOT.jar...';
          put auth-0.0.1-SNAPSHOT.jar -o app.jar;
          echo 'Upload complete. Verifying file...';
          ls;
          bye
          "

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'googleWebsite'  # Your app name in Azure
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./auth-0.0.1-SNAPSHOT.jar